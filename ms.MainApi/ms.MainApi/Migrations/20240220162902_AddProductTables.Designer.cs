// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ms.MainApi.Entity.Contexts;

#nullable disable

namespace ms.MainApi.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20240220162902_AddProductTables")]
    partial class AddProductTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Catalogs.Catalog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<List<int>>("actions")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("permissionId")
                        .HasColumnType("integer");

                    b.Property<int>("roleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = 0,
                            deletedBy = 0,
                            description = "Admin users role",
                            isDeleted = false,
                            name = "Admin",
                            updatedBy = 0
                        });
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("filePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("regDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("securityStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = 0,
                            deletedBy = 0,
                            email = "itedu.kz@gmail.com",
                            fileName = "",
                            filePath = "",
                            firstName = "Алмат",
                            isActive = true,
                            isDeleted = false,
                            lastName = "Тажіхан ұлы",
                            middleName = "",
                            passwordHash = "202cb962ac59075b964b07152d234b70",
                            phoneNumber = "87472203400",
                            regDate = new DateTime(2024, 2, 20, 22, 29, 2, 473, DateTimeKind.Local).AddTicks(777),
                            securityStamp = "",
                            updatedBy = 0
                        },
                        new
                        {
                            id = 2,
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = 0,
                            deletedBy = 0,
                            email = "pin@gmail.com",
                            fileName = "",
                            filePath = "",
                            firstName = "Айнұр",
                            isActive = true,
                            isDeleted = false,
                            lastName = "Бердикул",
                            middleName = "",
                            passwordHash = "202cb962ac59075b964b07152d234b70",
                            phoneNumber = "8747",
                            regDate = new DateTime(2024, 2, 20, 22, 29, 2, 473, DateTimeKind.Local).AddTicks(798),
                            securityStamp = "",
                            updatedBy = 0
                        });
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("roleId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.HasIndex("userId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Picture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Products.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("ProductPictures")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Products.ProductPicture", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("createdBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deletedBy")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("pictureId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("updatedBy")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("pictureId");

                    b.HasIndex("productId");

                    b.ToTable("ProductPictures");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.Permission", b =>
                {
                    b.HasOne("ms.MainApi.Entity.Models.DbModels.Identity.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Identity.UserRole", b =>
                {
                    b.HasOne("ms.MainApi.Entity.Models.DbModels.Identity.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ms.MainApi.Entity.Models.DbModels.Identity.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ms.MainApi.Entity.Models.DbModels.Products.ProductPicture", b =>
                {
                    b.HasOne("ms.MainApi.Entity.Models.DbModels.Picture", "picture")
                        .WithMany()
                        .HasForeignKey("pictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ms.MainApi.Entity.Models.DbModels.Products.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("picture");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
